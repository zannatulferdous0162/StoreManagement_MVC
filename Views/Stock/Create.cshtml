@model StoreManagement_Project.Models.Stock

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Stock</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Item Dropdown -->
            <div class="form-group">
                <label asp-for="ItemId" class="control-label"></label>
                <select id="itemSelect" name="ItemId" class="form-control">
                    <option value="">-- Select Item --</option>
                    @foreach (var item in (ViewData["Items"] as IEnumerable<dynamic>))
                    {
                        <option value="@item.ItemId" data-unitid="@item.UnitId">@item.ItemName</option>
                    }
                </select>
            </div>

            <!-- Unit Dropdown -->
            <div class="form-group">
                <label asp-for="UnitId" class="control-label"></label>
                <select id="unitSelect" asp-for="UnitId" class="form-control" asp-items="ViewBag.Units">
                    <option value="">-- Select Unit --</option>
                </select>
            </div>

            <!-- Quantity -->
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <!-- Warehouse -->
            <div class="form-group">
                <label asp-for="WarehouseId" class="control-label"></label>
                <select asp-for="WarehouseId" class="form-control" asp-items="ViewBag.WarehouseId"></select>
            </div>

            <!-- Location -->
            <div class="form-group">
                <label asp-for="LocationComponentId" class="control-label"></label>
                <select asp-for="LocationComponentId" class="form-control" asp-items="ViewBag.LocationComponentId"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const itemSelect = document.getElementById("itemSelect");
            const unitSelect = document.getElementById("unitSelect");

            itemSelect.addEventListener("change", function () {
                const selectedOption = itemSelect.options[itemSelect.selectedIndex];
                const unitId = selectedOption.getAttribute("data-unitid");

                if (unitId) {
                    for (let i = 0; i < unitSelect.options.length; i++) {
                        if (unitSelect.options[i].value === unitId) {
                            unitSelect.selectedIndex = i;
                            break;
                        }
                    }
                } else {
                    unitSelect.selectedIndex = 0;
                }
            });

            // Trigger change event on load to auto-select unit if needed
            itemSelect.dispatchEvent(new Event('change'));
        });

        warehouseSelect.addEventListener("change", function () {
            const warehouseId = warehouseSelect.value;

            if (!warehouseId) {
                locationSelect.innerHTML = '<option value="">-- Select Location --</option>';
                return;
            }

            fetch(`/Stocks/GetLocationsByWarehouse?warehouseId=${warehouseId}`)
                .then(response => response.json())
                .then(data => {
                    locationSelect.innerHTML = '<option value="">-- Select Location --</option>';
                    data.forEach(loc => {
                        const option = document.createElement("option");
                        option.value = loc.locationComponentId;
                        option.text = loc.location;
                        locationSelect.appendChild(option);
                    });
                });
        });

    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
