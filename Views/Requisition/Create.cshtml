@model StoreManagement_Project.Models.Requisition

@{
    ViewData["Title"] = "Create Requisition";
    var employees = (SelectList)ViewBag.Employees;
    var items = (SelectList)ViewBag.Items;
    var units = (SelectList)ViewBag.Units;
}

<h2>Create Requisition</h2>

<form asp-action="Create" method="post">
    <div class="row mb-3">
        <div class="col-md-4">
            <label asp-for="RequisitionNumber"></label>
            <input asp-for="RequisitionNumber" class="form-control" readonly />
        </div>
        <div class="col-md-4">
            <label asp-for="RequisitionDate"></label>
            <input asp-for="RequisitionDate" class="form-control" type="date" />
        </div>
        <div class="col-md-4">
            <label asp-for="EmployeeId">Requested By</label>
            <select asp-for="EmployeeId" class="form-select" asp-items="employees">
                <option value="">-- Select Employee --</option>
            </select>
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="Remarks"></label>
        <textarea asp-for="Remarks" class="form-control"></textarea>
    </div>

    <h4>Requisition Items</h4>
    <table class="table" id="requisitionItemsTable">
        <thead>
            <tr>
                <th>Item</th>
                <th>UOM</th>
                <th>Qty</th>
                <th>Remarks</th>
                <th><button type="button" class="btn btn-sm btn-primary" onclick="addItemRow()">Add</button></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <button type="submit" class="btn btn-success">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        let itemIndex = 0;

        function addItemRow() {
            const items = @Html.Raw(Json.Serialize(ViewBag.Items));
            const units = @Html.Raw(Json.Serialize(ViewBag.Units));

            const row = `
            <tr>
                <td>
                    <select name="RequisitionItems[${itemIndex}].ItemId" class="form-select item-select" required>
                        <option value="">-- Select Item --</option>
                        ${items.map(i => `<option value="${i.value}">${i.text}</option>`).join("")}
                    </select>
                </td>
                <td>
                    <select name="RequisitionItems[${itemIndex}].UnitId" class="form-select unit-select" required>
                        ${units.map(u => `<option value="${u.value}">${u.text}</option>`).join("")}
                    </select>
                </td>
                <td><input type="number" step="0.01" min="0.01" name="RequisitionItems[${itemIndex}].QuantityRequested" class="form-control" required /></td>
                <td><input name="RequisitionItems[${itemIndex}].Remarks" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">X</button></td>
            </tr>`;
            $('#requisitionItemsTable tbody').append(row);
            itemIndex++;
        }

        function removeRow(btn) {
            $(btn).closest('tr').remove();
        }

                function addItemRow() {
            const items = @Html.Raw(Json.Serialize(ViewBag.Items));

            const row = `
            <tr>
                <td>
                    <select name="RequisitionItems[${itemIndex}].ItemId" class="form-select item-select" data-index="${itemIndex}" required>
                        <option value="">-- Select Item --</option>
                        ${items.map(i => `<option value="${i.value}">${i.text}</option>`).join("")}
                    </select>
                </td>
                <td>
                    <select name="RequisitionItems[${itemIndex}].UnitId" class="form-select unit-select" required>
                        <option value="">-- Select Unit --</option>
                    </select>
                </td>
                <td><input type="number" step="0.01" min="0.01" name="RequisitionItems[${itemIndex}].QuantityRequested" class="form-control" required /></td>
                <td><input name="RequisitionItems[${itemIndex}].Remarks" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">X</button></td>
            </tr>`;

            $('#requisitionItemsTable tbody').append(row);

            // Bind the change event to the newly added Item dropdown
            $(`select[name='RequisitionItems[${itemIndex}].ItemId']`).change(function () {
                const selectedItemId = $(this).val();
                const rowIndex = $(this).data('index');
                const unitSelect = $(`select[name='RequisitionItems[${rowIndex}].UnitId']`);

                if (selectedItemId) {
                    $.getJSON('/Requisition/GetUnitByItem', { itemId: selectedItemId }, function (unit) {
                        unitSelect.empty();
                        unitSelect.append(`<option value="${unit.unitId}">${unit.nameOfUnit}</option>`);
                    });
                } else {
                    unitSelect.empty().append('<option value="">-- Select Unit --</option>');
                }
            });

            itemIndex++;
        }

    </script>
}
