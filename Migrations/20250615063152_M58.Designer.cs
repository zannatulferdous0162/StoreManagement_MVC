// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreManagement_Project.Data;

#nullable disable

namespace StoreManagement_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250615063152_M58")]
    partial class M58
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreManagement_Project.Models.Aisle", b =>
                {
                    b.Property<int>("AisleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AisleId"));

                    b.Property<string>("AisleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("AisleId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Aisles");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Bin", b =>
                {
                    b.Property<int>("BinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BinId"));

                    b.Property<string>("BinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("BinId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Bins");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("NameOfCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymbolOfCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.GRN", b =>
                {
                    b.Property<int>("GRNId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNId"));

                    b.Property<string>("GRNNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("GRNId");

                    b.HasIndex("GRNNumber")
                        .IsUnique()
                        .HasFilter("[GRNNumber] IS NOT NULL");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("GRNs");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.GRNItem", b =>
                {
                    b.Property<int>("GRNItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNItemId"));

                    b.Property<int>("GRNId")
                        .HasColumnType("int");

                    b.Property<bool>("Inspection")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationComponentId1")
                        .HasColumnType("int");

                    b.Property<string>("NameOfUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("GRNItemId");

                    b.HasIndex("GRNId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationComponentId");

                    b.HasIndex("LocationComponentId1");

                    b.HasIndex("UnitId");

                    b.ToTable("GRNItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackSizeId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PackSizeId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.LocationComponent", b =>
                {
                    b.Property<int?>("LocationComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("LocationComponentId"));

                    b.Property<int?>("AisleId")
                        .HasColumnType("int");

                    b.Property<int?>("BinId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RackId")
                        .HasColumnType("int");

                    b.Property<int?>("ShelfId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("LocationComponentId");

                    b.HasIndex("AisleId");

                    b.HasIndex("BinId");

                    b.HasIndex("RackId");

                    b.HasIndex("ShelfId");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("ZoneId");

                    b.ToTable("LocationComponents");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PackSize", b =>
                {
                    b.Property<int>("PackSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackSizeId"));

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackSizeId");

                    b.ToTable("PackSizes");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"));

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POManualNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PONo")
                        .IsUnique()
                        .HasFilter("[PONo] IS NOT NULL");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("PurchaseOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseRequisitionItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("UOM");

                    b.HasKey("PurchaseOrderItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("PurchaseRequisitionItemId");

                    b.HasIndex("UnitId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseRequisition", b =>
                {
                    b.Property<int>("PurchaseRequisitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseRequisitionId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseRequisitionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseRequisitionId");

                    b.HasIndex("RequisitionId");

                    b.ToTable("PurchaseRequisitions");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseRequisitionItem", b =>
                {
                    b.Property<int>("PurchaseRequisitionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseRequisitionItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseRequisitionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RequisitionItemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseRequisitionItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseRequisitionId");

                    b.HasIndex("RequisitionItemId");

                    b.HasIndex("UnitId");

                    b.ToTable("PurchaseRequisitionItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Rack", b =>
                {
                    b.Property<int>("RackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RackId"));

                    b.Property<string>("RackName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("RackId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Requisition", b =>
                {
                    b.Property<int>("RequisitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("RequisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequisitionNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequisitionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Requisitions");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionIssue", b =>
                {
                    b.Property<int>("RequisitionIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionIssueId"));

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssueNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.HasKey("RequisitionIssueId");

                    b.HasIndex("RequisitionId");

                    b.ToTable("RequisitionIssues");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionIssueItem", b =>
                {
                    b.Property<int>("RequisitionIssueItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionIssueItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationComponentId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RequisitionIssueId")
                        .HasColumnType("int");

                    b.Property<int>("RequisitionItemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("RequisitionIssueItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationComponentId");

                    b.HasIndex("RequisitionIssueId");

                    b.HasIndex("RequisitionItemId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("RequisitionIssueItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionItem", b =>
                {
                    b.Property<int>("RequisitionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionItemId"));

                    b.Property<bool>("IsFullyIssued")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityRequested")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RequisitionId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("RequisitionItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RequisitionId");

                    b.HasIndex("UnitId");

                    b.ToTable("RequisitionItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Shelf", b =>
                {
                    b.Property<int>("ShelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelfId"));

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ShelfId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("shelves");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationComponentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationComponentId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.StockAdjustment", b =>
                {
                    b.Property<int>("StockAdjustmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustmentId"));

                    b.Property<decimal>("AdjustedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("AdjustmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdjustmentReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdjustmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("StockAdjustmentId");

                    b.HasIndex("StockId");

                    b.ToTable("StockAdjustments");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBaseUnit")
                        .HasColumnType("bit");

                    b.Property<string>("NameOfUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitFactor")
                        .HasColumnType("float");

                    b.Property<int>("UnitSetId")
                        .HasColumnType("int");

                    b.HasKey("UnitId");

                    b.HasIndex("UnitSetId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.UnitSet", b =>
                {
                    b.Property<int>("UnitSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitSetId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfUnitSet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitSetId");

                    b.ToTable("UnitSets");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.WasteManagement", b =>
                {
                    b.Property<int>("WasteManagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WasteManagementId"));

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WasteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WastedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("WasteManagementId");

                    b.HasIndex("StockId");

                    b.ToTable("WasteManagements");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Zone", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZoneId"));

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZoneId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Aisle", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Bin", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Employee", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.GRN", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany("GRNs")
                        .HasForeignKey("WarehouseId");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.GRNItem", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.GRN", "GRN")
                        .WithMany("GRNItems")
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.LocationComponent", "LocationComponent")
                        .WithMany()
                        .HasForeignKey("LocationComponentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StoreManagement_Project.Models.LocationComponent", null)
                        .WithMany("GRNItems")
                        .HasForeignKey("LocationComponentId1");

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("GRN");

                    b.Navigation("Item");

                    b.Navigation("LocationComponent");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Item", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.PackSize", "PackSize")
                        .WithMany()
                        .HasForeignKey("PackSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("PackSize");

                    b.Navigation("SubCategory");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.LocationComponent", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Aisle", "Aisle")
                        .WithMany()
                        .HasForeignKey("AisleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StoreManagement_Project.Models.Bin", "Bin")
                        .WithMany()
                        .HasForeignKey("BinId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StoreManagement_Project.Models.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StoreManagement_Project.Models.Shelf", "Shelf")
                        .WithMany()
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany("LocationComponents")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StoreManagement_Project.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Aisle");

                    b.Navigation("Bin");

                    b.Navigation("Rack");

                    b.Navigation("Shelf");

                    b.Navigation("Warehouse");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseOrder", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Currency", "Currency")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("StoreManagement_Project.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Currency");

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItem")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.PurchaseRequisitionItem", "PurchaseRequisitionItem")
                        .WithMany()
                        .HasForeignKey("PurchaseRequisitionItemId");

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseRequisitionItem");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseRequisition", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Requisition", "Requisition")
                        .WithMany()
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requisition");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseRequisitionItem", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.PurchaseRequisition", "PurchaseRequisition")
                        .WithMany("PurchaseRequisitionItems")
                        .HasForeignKey("PurchaseRequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.RequisitionItem", "RequisitionItem")
                        .WithMany()
                        .HasForeignKey("RequisitionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseRequisition");

                    b.Navigation("RequisitionItem");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Rack", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Requisition", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionIssue", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Requisition", "Requisition")
                        .WithMany()
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requisition");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionIssueItem", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.LocationComponent", "LocationComponent")
                        .WithMany()
                        .HasForeignKey("LocationComponentId");

                    b.HasOne("StoreManagement_Project.Models.RequisitionIssue", "RequisitionIssue")
                        .WithMany("RequisitionIssueItems")
                        .HasForeignKey("RequisitionIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.RequisitionItem", "RequisitionItem")
                        .WithMany()
                        .HasForeignKey("RequisitionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Item");

                    b.Navigation("LocationComponent");

                    b.Navigation("RequisitionIssue");

                    b.Navigation("RequisitionItem");

                    b.Navigation("Unit");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionItem", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Requisition", "Requisition")
                        .WithMany("RequisitionItems")
                        .HasForeignKey("RequisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Requisition");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Shelf", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Stock", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.LocationComponent", "LocationComponent")
                        .WithMany()
                        .HasForeignKey("LocationComponentId");

                    b.HasOne("StoreManagement_Project.Models.Unit", "Unit")
                        .WithMany("Stocks")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Item");

                    b.Navigation("LocationComponent");

                    b.Navigation("Unit");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.StockAdjustment", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.SubCategory", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Unit", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.UnitSet", "UnitSet")
                        .WithMany("Units")
                        .HasForeignKey("UnitSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitSet");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.WasteManagement", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Zone", b =>
                {
                    b.HasOne("StoreManagement_Project.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Currency", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.GRN", b =>
                {
                    b.Navigation("GRNItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Item", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.LocationComponent", b =>
                {
                    b.Navigation("GRNItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItem");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.PurchaseRequisition", b =>
                {
                    b.Navigation("PurchaseRequisitionItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Requisition", b =>
                {
                    b.Navigation("RequisitionItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.RequisitionIssue", b =>
                {
                    b.Navigation("RequisitionIssueItems");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Unit", b =>
                {
                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.UnitSet", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("StoreManagement_Project.Models.Warehouse", b =>
                {
                    b.Navigation("GRNs");

                    b.Navigation("LocationComponents");
                });
#pragma warning restore 612, 618
        }
    }
}
